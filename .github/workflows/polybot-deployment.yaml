name: Polybot Microservice Deployment

on:
  push:
    branches:
      - main

env:
  EC2_PUBLIC_IPS: 15.237.249.218,35.180.91.252  # Add more IPs as needed

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          cd polybot
          docker build -t ${{ secrets.DOCKER_USERNAME }}/polybot:${{ github.run_number }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/polybot:${{ github.run_number }}

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Create SSH Key File
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > /tmp/ssh_key
          chmod 600 /tmp/ssh_key  # Ensure the key is protected

      - name: Deploy to EC2 instances
        run: |
          IFS=',' read -r -a IP_ARRAY <<< "${{ env.EC2_PUBLIC_IPS }}"
          for IP in "${IP_ARRAY[@]}"; do
            echo "Deploying to $IP"
            
            # Create the target directory if it doesn't exist
            ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no ubuntu@$IP "mkdir -p /home/ubuntu/projects/AWSProject-bennyi/"

            # Copy the polybot directory to EC2
            scp -i /tmp/ssh_key -o StrictHostKeyChecking=no -r polybot/ ubuntu@$IP:/home/ubuntu/projects/AWSProject-bennyi/
            
            # Update Docker Compose project on EC2
            ssh -i /tmp/ssh_key -o StrictHostKeyChecking=no ubuntu@$IP << 'EOF'
              # Install AWS CLI if needed
              if ! command -v aws &> /dev/null
              then
                sudo apt-get update -y
                sudo apt-get install -y awscli
              fi

              # Create the .env file with dynamic values
              echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" > /home/ubuntu/projects/AWSProject-bennyi/polybot/.env
              echo "S3_BUCKET_NAME=bennyi-aws-s3-bucket" >> /home/ubuntu/projects/AWSProject-bennyi/polybot/.env
              echo "TELEGRAM_APP_URL=aws-domain-bennyi.int-devops.click:8443" >> /home/ubuntu/projects/AWSProject-bennyi/polybot/.env
              echo "POLYBOT_IMG_NAME=${{ secrets.DOCKER_USERNAME }}/polybot:${{ github.run_number }}" >> /home/ubuntu/projects/AWSProject-bennyi/polybot/.env
              echo "DYNAMODB_TABLE=AWS-Project-Predictions-bennyi" >> /home/ubuntu/projects/AWSProject-bennyi/polybot/.env
              echo "AWS_REGION=eu-west-3" >> /home/ubuntu/projects/AWSProject-bennyi/polybot/.env
              echo "SQS_URL=https://sqs.eu-west-3.amazonaws.com/019273956931/aws-sqs-image-processing-bennyi" >> /home/ubuntu/projects/AWSProject-bennyi/polybot/.env

              # Install Docker and Docker Compose if needed
              if ! command -v docker &> /dev/null
              then
                sudo apt-get update -y
                sudo apt-get install -y docker.io
                sudo systemctl start docker
                sudo systemctl enable docker
              fi

              if ! command -v docker-compose &> /dev/null
              then
                sudo curl -L "https://github.com/docker/compose/releases/download/v2.11.2/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
              fi

              # Login to Docker Hub
              echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

              # Manage Docker containers
              cd /home/ubuntu/projects/AWSProject-bennyi/polybot
              sudo docker-compose down
              sudo docker-compose up -d
          EOF
          done

      - name: Clean up SSH Key
        run: |
          rm -f /tmp/ssh_key  # Ensure the SSH key is deleted after the job
